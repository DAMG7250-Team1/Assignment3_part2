name: Deploy Snowpark Python Code

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SNOWFLAKE_CONNECTIONS_DEFAULT_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_CONNECTIONS_DEFAULT_USER: ${{ secrets.SNOWFLAKE_USERNAME }}
      SNOWFLAKE_CONNECTIONS_DEFAULT_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      SNOWFLAKE_CONNECTIONS_DEFAULT_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
      SNOWFLAKE_CONNECTIONS_DEFAULT_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      SNOWFLAKE_CONNECTIONS_DEFAULT_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SnowSQL
        run: |
          # Use a valid SnowSQL installer URL
          SNOWSQL_URL="https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.24-linux_x86_64.bash"
          
          # Download the installer
          curl -fsSL "$SNOWSQL_URL" -o snowsql-1.2.24.bash
          
          # Verify the downloaded file is valid
          if head -n 1 snowsql-1.2.24.bash | grep -q "<?xml"; then
            echo "Error: Downloaded file is not a valid SnowSQL script. Exiting."
            exit 1
          fi
          
          # Install SnowSQL
          chmod +x snowsql-1.2.24.bash
          ./snowsql-1.2.24.bash -y
          
          # Add SnowSQL to PATH
          echo "$HOME/.snowsql/bin" >> $GITHUB_PATH

      - name: Verify SnowSQL Installation
        run: snowsql --version

      - name: Install Snowflake CLI (Optional)
        uses: Snowflake-Labs/snowflake-cli-action@v1.5
        with:
          cli-version: "latest"
          default-config-file-path: ".snowflake/config.toml"

      - name: Configure default connection for Snowflake CLI
        run: |
          mkdir -p .snowflake
          cat <<EOF > .snowflake/config.toml
          [default_connection_name]
          default_connection_name = "my_default_connection"

          [connections]
          [connections.my_default_connection]
          account = "${SNOWFLAKE_CONNECTIONS_DEFAULT_ACCOUNT}"
          user = "${SNOWFLAKE_CONNECTIONS_DEFAULT_USER}"
          password = "${SNOWFLAKE_CONNECTIONS_DEFAULT_PASSWORD}"
          warehouse = "${SNOWFLAKE_CONNECTIONS_DEFAULT_WAREHOUSE}"
          database = "${SNOWFLAKE_CONNECTIONS_DEFAULT_DATABASE}"
          role = "${SNOWFLAKE_CONNECTIONS_DEFAULT_ROLE}"
          EOF

      - name: Test Snowflake connection using SnowSQL
        run: snowsql -q "SELECT CURRENT_TIMESTAMP;"

      - name: Fetch repository changes from Git (Optional)
        run: snow git fetch my_git_repo

      - name: Deploy scripts to Snowflake using SnowSQL
        run: |
          snowsql -q "CREATE OR REPLACE PROCEDURE demo_db.git_demo.filter_table(
            inputTableName VARCHAR,
            filter_value VARCHAR,
            outputTableName VARCHAR
          ) RETURNS STRING 
          LANGUAGE PYTHON 
          RUNTIME_VERSION = '3.9' 
          PACKAGES = ('snowflake-snowpark-python') 
          IMPORTS = ('@admin_db.integrations.snowflake_snowpark_utilities/branches/main/common/filter_table.py') 
          HANDLER = 'filter_table.main';"
